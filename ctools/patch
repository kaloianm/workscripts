diff --git a/ctools/defragment_sharded_collection.py b/ctools/defragment_sharded_collection.py
index 6b33c98..a39cec0 100755
--- a/ctools/defragment_sharded_collection.py
+++ b/ctools/defragment_sharded_collection.py
@@ -3,6 +3,7 @@
 
 import argparse
 import asyncio
+import decorator
 import logging
 import math
 from motor.frameworks.asyncio import is_event_loop
@@ -19,6 +20,16 @@ from tqdm import tqdm
 if (sys.version_info[0] < 3):
     raise Exception("Must be using Python 3")
 
+'''
+Wrapper for functions invoking commands. Catch and print
+eventual exceptions, without stopping the execution.
+'''
+@decorator.decorator
+async def wrap_command(func, *args, **kwargs):
+    try:
+        res = await func(*args, **kwargs)
+    except Exception as e:
+        print("Command failed. Function: {} . Params: {}. Exception: {}".format(func.__name__, args[1:], e))
 
 class ShardedCollection:
     def __init__(self, cluster, ns):
@@ -61,12 +72,14 @@ class ShardedCollection:
         # Round up the data size of the chunk to the nearest kilobyte
         return math.ceil(max(float(data_size_response['size']), 1024.0) / 1024.0)
 
+    @wrap_command
     async def split_chunk_middle(self, chunk):
         await self.cluster.adminDb.command({
                 'split': self.name,
                 'bounds': [chunk['min'], chunk['max']]
             }, codec_options=self.cluster.client.codec_options)
 
+    @wrap_command
     async def split_chunk(self, chunk, maxChunkSize_kb):
         shard_entry = await self.cluster.configDb.shards.find_one({'_id': chunk['shard']})
         if shard_entry is None:
@@ -90,6 +103,7 @@ class ShardedCollection:
 
         conn.close()
 
+    @wrap_command
     async def move_chunk(self, chunk, to):
         await self.cluster.adminDb.command({
                 'moveChunk': self.name,
@@ -97,6 +111,7 @@ class ShardedCollection:
                 'to': to
             }, codec_options=self.cluster.client.codec_options)
 
+    @wrap_command
     async def merge_chunks(self, consecutive_chunks, unsafe_mode):
         assert (len(consecutive_chunks) > 1)
 
diff --git a/ctools/requirements.txt b/ctools/requirements.txt
index 8fd401a..f065fca 100644
--- a/ctools/requirements.txt
+++ b/ctools/requirements.txt
@@ -3,3 +3,4 @@ motor == 2.4.0
 psutil == 5.7.0
 pymongo == 3.11.2
 tqdm == 4.60.0
+decorator
